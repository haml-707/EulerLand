{"version":3,"sources":["file:///C:/eulerland%20game/EulerLand/assets/scripts/puzzle/typescript-001.ts"],"names":["_decorator","Component","Node","view","macro","find","tween","ccclass","property","Typescript001","type","A","framesize","getFrameSize","node","cvsize","getCanvasSize","setOrientation","ORIENTATION_LANDSCAPE","height","width","setFrameSize","s","getDesignResolutionSize","setDesignResolutionSize","setCanvasSize","a","b","console","log","B","n1","position","to","n2","start","C","sss","aaa","D","E","onLoad","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAcC,MAAAA,I,OAAAA,I;AAAMC,MAAAA,K,OAAAA,K;AAAOC,MAAAA,I,OAAAA,I;AAAmBC,MAAAA,K,OAAAA,K;;;;;;;OACxE;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;+BAGjBS,a,WADZF,OAAO,CAAC,eAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAER;AADA,OAAD,C,UAIRM,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAER;AADA,OAAD,C,oCANb,MACaO,aADb,SACmCR,SADnC,CAC6C;AAAA;AAAA;;AAAA;;AAAA;;AAAA,uCAUnC,CAVmC;;AAAA,uCAWnC,KAXmC;AAAA;;AAalCU,QAAAA,CAAC,GAAG;AACP,cAAIC,SAAS,GAAGT,IAAI,CAACU,YAAL,EAAhB;AACA,cAAIC,IAAI,GAAGT,IAAI,CAAC,QAAD,CAAf;AACA,cAAIU,MAAM,GAAGZ,IAAI,CAACa,aAAL,EAAb,CAHO,CAIR;;AACCb,UAAAA,IAAI,CAACc,cAAL,CAAoBb,KAAK,CAACc,qBAA1B;AACA,cAAIN,SAAS,CAACO,MAAV,GAAmBP,SAAS,CAACQ,KAAjC,EACIjB,IAAI,CAACkB,YAAL,CAAkBT,SAAS,CAACO,MAA5B,EAAoCP,SAAS,CAACQ,KAA9C;AACJ,cAAIE,CAAC,GAAGnB,IAAI,CAACoB,uBAAL,EAAR;AACApB,UAAAA,IAAI,CAACqB,uBAAL,CAA6BF,CAAC,CAACH,MAA/B,EAAuCG,CAAC,CAACF,KAAzC,EAAgD,CAAhD;AACAjB,UAAAA,IAAI,CAACsB,aAAL,CAAmBV,MAAM,CAACI,MAA1B,EAAkCJ,MAAM,CAACK,KAAzC;AACA,cAAIM,CAAC,GAAGvB,IAAI,CAACoB,uBAAL,EAAR;AACA,cAAII,CAAC,GAAGxB,IAAI,CAACa,aAAL,EAAR;AACAY,UAAAA,OAAO,CAACC,GAAR,CAAYH,CAAZ;AACAE,UAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACAC,UAAAA,OAAO,CAACC,GAAR,CAAYjB,SAAZ;AACH;;AACMkB,QAAAA,CAAC,GAAG;AACPxB,UAAAA,KAAK,CAAC,KAAKyB,EAAL,CAAQC,QAAT,CAAL,CACKC,EADL,CACQ,CADR,EACW,KAAKC,EAAL,CAAQF,QADnB,EAEKG,KAFL;AAGH;;AACMC,QAAAA,CAAC,GAAG;AACP,eAAKC,GAAL,GAAW,IAAX;AACAT,UAAAA,OAAO,CAACC,GAAR,CAAY,KAAKS,GAAjB;AACH;;AACMC,QAAAA,CAAC,GAAG;AACP,eAAKF,GAAL,GAAW,KAAX;AACA;AACH;;AACMG,QAAAA,CAAC,GAAG;AACPZ,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;;AACDY,QAAAA,MAAM,GAAG,CACL;AACD;AACD;AACD;;AACDN,QAAAA,KAAK,GAAG,CAEP;;AAEAO,QAAAA,MAAM,CAAEC,SAAF,EAAqB;AACvB,cAAI,KAAKN,GAAT,EACI,KAAKC,GAAL;AAEP;;AA3DuC,O;;;;;iBAI9B,I;;;;;;;iBAIA,I;;;AAsDf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, Canvas, view, macro, find, UITransform, tween, Event } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Typescript001')\r\nexport class Typescript001 extends Component {\r\n    @property({\r\n        type: Node\r\n    })\r\n    n1: Node = null!;\r\n    @property({\r\n        type: Node\r\n    })\r\n    n2: Node = null!;\r\n\r\n    aaa = 0;\r\n    sss = false;\r\n\r\n    public A() {\r\n        let framesize = view.getFrameSize();\r\n        let node = find(\"Canvas\");\r\n        let cvsize = view.getCanvasSize();\r\n       // let dw = cvs\r\n        view.setOrientation(macro.ORIENTATION_LANDSCAPE);\r\n        if (framesize.height > framesize.width)\r\n            view.setFrameSize(framesize.height, framesize.width)\r\n        let s = view.getDesignResolutionSize();\r\n        view.setDesignResolutionSize(s.height, s.width, 2);\r\n        view.setCanvasSize(cvsize.height, cvsize.width);\r\n        let a = view.getDesignResolutionSize();\r\n        let b = view.getCanvasSize()\r\n        console.log(a);\r\n        console.log(b);\r\n        console.log(framesize);\r\n    }\r\n    public B() {\r\n        tween(this.n1.position)\r\n            .to(1, this.n2.position)\r\n            .start();\r\n    }\r\n    public C() {\r\n        this.sss = true;\r\n        console.log(this.aaa);\r\n    }\r\n    public D() {\r\n        this.sss = false;\r\n        return;\r\n    }\r\n    public E() {\r\n        console.log(\"00000000\");\r\n    }\r\n    onLoad() {\r\n        // this.A();\r\n       // this.node.on(Node.EventType.TOUCH_START, this.C, this)\r\n      //  this.node.on(Node.EventType.TOUCH_END, this.D, this)\r\n    }\r\n    start() {\r\n\r\n    }\r\n\r\n     update (deltaTime: number) {\r\n         if (this.sss)\r\n             this.aaa++;\r\n         \r\n     }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.0/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.0/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.0/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}
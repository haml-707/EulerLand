{"version":3,"sources":["file:///C:/eulerland%20game/EulerLand/assets/scripts/puzzle/Sudoku.ts"],"names":["_decorator","Component","Node","Label","ccclass","property","Sudoku","type","OpenSu","sudoku","active","NumberAdd","event","btn","target","label","children","getComponent","string","a","Number","toString","start"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAYC,MAAAA,K,OAAAA,K;;;;;;;AACpCC,MAAAA,O,GAAsBJ,U,CAAtBI,O;AAASC,MAAAA,Q,GAAaL,U,CAAbK,Q;;wBAGJC,M,WADZF,OAAO,CAAC,QAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEL;AADA,OAAD,C;;;;;;;;;;;;;;;;;;;eAMFM,M,GAAP,kBAAgB;AACZ,eAAKC,MAAL,CAAYC,MAAZ,GAAqB,IAArB;AACH,S;;eACMC,S,GAAP,mBAAiBC,KAAjB,EAA+B;AAC3B,cAAIC,GAAG,GAAGD,KAAK,CAAEE,MAAjB;AACA,cAAIC,KAAK,GAAGF,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgBC,YAAhB,CAA6Bd,KAA7B,CAAZ;;AACA,cAAI,CAAAY,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,MAAP,KAAiB,EAArB,EAAyB;AACrB,gBAAIC,CAAC,GAAGC,MAAM,CAACL,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEG,MAAR,CAAd;AACAC,YAAAA,CAAC;;AACD,gBAAIA,CAAC,GAAG,CAAR,EAAW;AACPA,cAAAA,CAAC,GAAG,CAAJ;AACAN,cAAAA,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgBN,MAAhB,GAAyB,KAAzB;AACAG,cAAAA,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgBN,MAAhB,GAAyB,IAAzB;AACH,aAJD,MAKK;AACDG,cAAAA,GAAG,CAACG,QAAJ,CAAaG,CAAC,GAAG,CAAjB,EAAoBT,MAApB,GAA6B,KAA7B;AACAG,cAAAA,GAAG,CAACG,QAAJ,CAAaG,CAAb,EAAgBT,MAAhB,GAAyB,IAAzB;AACH;;AACDK,YAAAA,KAAK,CAAEG,MAAP,GAAgBC,CAAC,CAACE,QAAF,EAAhB;AAEH,WAdD,MAeK;AACDN,YAAAA,KAAK,CAAEG,MAAP,GAAgB,GAAhB;AACAL,YAAAA,GAAG,CAACG,QAAJ,CAAa,CAAb,EAAgBN,MAAhB,GAAyB,IAAzB;AACH;AACJ,S;;eAEDY,K,GAAA,iBAAS,CACL;AACH,S,CAED;AACA;AACA;;;;QAxCwBrB,S;;;;;iBAIT,I;;;AAuCnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node,Event, Label } from 'cc';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('Sudoku')\r\nexport class Sudoku extends Component {\r\n    @property({\r\n        type: Node,\r\n    })\r\n    sudoku: Node = null!;\r\n\r\n\r\n    public OpenSu() {\r\n        this.sudoku.active = true;\r\n    }\r\n    public NumberAdd(event: Event) {\r\n        let btn = event!.target as Node;\r\n        let label = btn.children[9].getComponent(Label);\r\n        if (label?.string != \"\") {\r\n            let a = Number(label?.string);\r\n            a++;\r\n            if (a > 8) {\r\n                a = 0;\r\n                btn.children[8].active = false;\r\n                btn.children[0].active = true;\r\n            }\r\n            else {\r\n                btn.children[a - 1].active = false;\r\n                btn.children[a].active = true;\r\n            }\r\n            label!.string = a.toString();\r\n\r\n        }\r\n        else {\r\n            label!.string = \"0\";\r\n            btn.children[0].active = true;\r\n        }\r\n    }\r\n\r\n    start () {\r\n        // [3]\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.0/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.0/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.0/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}
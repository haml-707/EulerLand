{"version":3,"sources":["file:///C:/eulerland%20game/EulerLand/assets/scripts/parkour/BlockPoolControl.ts"],"names":["_decorator","Component","Node","Prefab","NodePool","instantiate","TextureCube","director","PlayerControl","ccclass","property","BuildBlockPool","type","SetBarPool","k","_barPool","i","node","barPerfabs","put","_barPools","push","start","Reset","block0","block1","block2","block3","block4","children","length","destroy","clear","playerCurentZ","player","position","z","index","playerLastZ","nextBlockZ","lenth","perfabs","size","get","parent","clone","setPosition","getScene","globals","skybox","envmap","skyBoxes","onLoad","update","deltaTime","console","log","ambient","skyIllum","a1","Number","name","playerControl","phase"],"mappings":"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","sourcesContent":["\r\nimport { _decorator, Component, Node, Prefab, NodePool, instantiate, TextureCube, Scene, SceneAsset, director } from 'cc';\r\nimport { PlayerControl } from './PlayerControl';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('BuildBlockPool')\r\nexport class BuildBlockPool extends Component {\r\n    // [1]\r\n    // dummy = '';\r\n\r\n    @property({\r\n        type: TextureCube\r\n    })\r\n    skyBoxes: TextureCube[] = [];\r\n    @property({\r\n        type: PlayerControl\r\n    })\r\n    playerControl: PlayerControl = null!;\r\n    @property(\r\n        { type: Prefab }\r\n    )\r\n    perfabs: Prefab[] = [];\r\n    @property(\r\n        { type: Prefab }\r\n    )\r\n    barPerfabs: Prefab[] = [];\r\n    @property(\r\n        { type: Node }\r\n    )\r\n    player: Node = null!;\r\n    playerCurentZ = 0;\r\n    playerLastZ = 0;\r\n    blockPool = new NodePool();\r\n    block1!: Node | null;\r\n    block2!: Node | null;\r\n    block3!: Node | null;\r\n    block4!: Node | null;\r\n    block0!: Node | null;\r\n    index = 0;\r\n    nextBlockZ = 596;\r\n\r\n    _barPools: NodePool[] = [];\r\n\r\n    public SetBarPool() {\r\n        for (let k = 0; k < 4; k++) {\r\n            let _barPool: NodePool = new NodePool;\r\n            for (let i = 0; i < 5; i++) {\r\n                let node = instantiate(this.barPerfabs[k]);\r\n                _barPool.put(node);\r\n            }\r\n            this._barPools.push(_barPool);\r\n        }\r\n    }\r\n\r\n    start () {\r\n        // [3]\r\n    }\r\n    public Reset() {\r\n        this.block0 = null;\r\n        this.block1 = null;\r\n        this.block2 = null;\r\n        this.block3 = null;\r\n        this.block4 = null;\r\n        for (let i = 0; i < this.node.children.length; i++)\r\n            this.node.children[i].destroy();\r\n        for (let k = 0; k < this._barPools.length; k++) {\r\n            this._barPools[k].clear();\r\n            for (let i = 0; i < 5; i++) {\r\n                let node = instantiate(this.barPerfabs[k]);\r\n                this._barPools[k].put(node);\r\n            }\r\n        }\r\n        this.playerCurentZ = this.player.position.z;\r\n        this.index = 0;\r\n        this.playerLastZ = 0;\r\n        this.nextBlockZ = 596;\r\n        let lenth = this.perfabs.length;\r\n        /*for (let i = 0; i < lenth; ++i)\r\n        {\r\n            let block = instantiate(this.perfabs[i]);\r\n            this.blockPool.put(block);\r\n        }\r\n        if(this.blockPool.size()>0)\r\n            this.block1 = this.blockPool.get();\r\n        else\r\n            this.block1 = instantiate(this.perfabs[0]);\r\n        if (this.blockPool.size() > 0)\r\n            this.block2 = this.blockPool.get();\r\n        else\r\n            this.block2 = instantiate(this.perfabs[0]);\r\n        if (this.block1 != null)\r\n        {\r\n            this.block1.parent = this.node;\r\n            let position = this.block1.position.clone();\r\n            position.z = 28;\r\n            this.block1.setPosition(position);\r\n        }\r\n        if (this.block2 != null)\r\n        {\r\n            this.block2.parent = this.node;\r\n            let position = this.block2.position.clone();\r\n            position.z = 88;\r\n            this.block2.setPosition(position);\r\n        }*/\r\n        this.block0 = instantiate(this.barPerfabs[4]);\r\n        this.block4 = instantiate(this.barPerfabs[3]);\r\n       \r\n        \r\n        \r\n        if (this._barPools[0].size() > 0)\r\n            this.block1 = this._barPools[0].get();\r\n        else\r\n            this.block1 = instantiate(this.barPerfabs[0]);\r\n        if (this._barPools[0].size() > 0)\r\n            this.block2 = this._barPools[0].get();\r\n        else\r\n            this.block2 = instantiate(this.barPerfabs[0]);\r\n        if (this._barPools[0].size() > 0)\r\n            this.block3 = this._barPools[0].get();\r\n        else\r\n            this.block3 = instantiate(this.barPerfabs[0]);\r\n        if (this.block0 != null) {\r\n            this.block0.parent = this.node;\r\n            let position = this.block0.position.clone();\r\n            position.z = -28;\r\n            this.block0.setPosition(position);\r\n        }\r\n        if (this.block1 != null) {\r\n            this.block1.parent = this.node;\r\n            let position = this.block1.position.clone();\r\n            position.z = 128;\r\n            this.block1.setPosition(position);\r\n        }\r\n        if (this.block2 != null) {\r\n            this.block2.parent = this.node;\r\n            let position = this.block2.position.clone();\r\n            position.z = 284;\r\n            this.block2.setPosition(position);\r\n        }\r\n        if (this.block3 != null) {\r\n            this.block3.parent = this.node;\r\n            let position = this.block3.position.clone();\r\n            position.z = 440;\r\n            this.block3.setPosition(position);\r\n        }\r\n        director.getScene()!.globals.skybox.envmap = this.skyBoxes[0];\r\n    }\r\n    onLoad()\r\n    {\r\n        this.SetBarPool();\r\n        this.playerCurentZ = this.player.position.z;\r\n        let lenth = this.perfabs.length;\r\n        /*for (let i = 0; i < lenth; ++i)\r\n        {\r\n            let block = instantiate(this.perfabs[i]);\r\n            this.blockPool.put(block);\r\n        }\r\n        if(this.blockPool.size()>0)\r\n            this.block1 = this.blockPool.get();\r\n        else\r\n            this.block1 = instantiate(this.perfabs[0]);\r\n        if (this.blockPool.size() > 0)\r\n            this.block2 = this.blockPool.get();\r\n        else\r\n            this.block2 = instantiate(this.perfabs[0]);\r\n        if (this.block1 != null)\r\n        {\r\n            this.block1.parent = this.node;\r\n            let position = this.block1.position.clone();\r\n            position.z = 28;\r\n            this.block1.setPosition(position);\r\n        }\r\n        if (this.block2 != null)\r\n        {\r\n            this.block2.parent = this.node;\r\n            let position = this.block2.position.clone();\r\n            position.z = 88;\r\n            this.block2.setPosition(position);\r\n        }*/\r\n        this.block0 = instantiate(this.barPerfabs[4]);\r\n        this.block4 = instantiate(this.barPerfabs[3]);\r\n        if (this._barPools[0].size() > 0)\r\n            this.block1 = this._barPools[0].get();\r\n        else\r\n            this.block1 = instantiate(this.barPerfabs[0]);\r\n        if (this._barPools[0].size() > 0)\r\n            this.block2 = this._barPools[0].get();\r\n        else\r\n            this.block2 = instantiate(this.barPerfabs[0]);\r\n        if (this._barPools[0].size() > 0)\r\n            this.block3 = this._barPools[0].get();\r\n        else\r\n            this.block3 = instantiate(this.barPerfabs[0]);\r\n        if (this.block0 != null) {\r\n            this.block0.parent = this.node;\r\n            let position = this.block0.position.clone();\r\n            position.z = -28;\r\n            this.block0.setPosition(position);\r\n        }\r\n        if (this.block1 != null) {\r\n            this.block1.parent = this.node;\r\n            let position = this.block1.position.clone();\r\n            position.z = 128;\r\n            this.block1.setPosition(position);\r\n        }\r\n        if (this.block2 != null) {\r\n            this.block2.parent = this.node;\r\n            let position = this.block2.position.clone();\r\n            position.z = 284;\r\n            this.block2.setPosition(position);\r\n        }\r\n        if (this.block3!= null) {\r\n            this.block3.parent = this.node;\r\n            let position = this.block3.position.clone();\r\n            position.z = 440;\r\n            this.block3.setPosition(position);\r\n        }\r\n        //this.Reset();\r\n    }\r\n\r\n    update(deltaTime: number)\r\n    {\r\n        console.log(this.barPerfabs);\r\n        console.log(this._barPools);\r\n        console.log(this.node);\r\n        console.log(this.index);\r\n        if (this.player.position.z>2750) {\r\n            director.getScene()!.globals.skybox.envmap = this.skyBoxes[1];\r\n            director.getScene()!.globals.ambient.skyIllum = 20000;\r\n        }\r\n        if (this.player.position.z > 4150) {\r\n            director.getScene()!.globals.skybox.envmap = this.skyBoxes[2];\r\n            director.getScene()!.globals.ambient.skyIllum = 40000;\r\n        }\r\n        this.playerCurentZ += this.player.position.z - this.playerLastZ;\r\n        this.playerLastZ = this.player.position.z;\r\n        if (this.playerCurentZ > 156)\r\n        {\r\n            this.playerCurentZ -= 156;\r\n           /* if (this.index == 0)\r\n            {\r\n                let str = this.block1!.name.split(\"!\");\r\n                let a1 = Number(str[0]);\r\n                let a2 = Number(str[1])\r\n                this.blockPool.put(this.block1!);\r\n                this.block1 = this.blockPool.get();\r\n                if (this.block1 != null)\r\n                {\r\n                    this.block1.parent = this.node;\r\n                    let position = this.block1.position.clone();\r\n                    position.z = this.nextBlockZ;\r\n                    this.block1.setPosition(position);\r\n                }\r\n            }\r\n            if (this.index == 1)\r\n            {\r\n                this.blockPool.put(this.block2!);\r\n                this.block2 = this.blockPool.get();\r\n                if (this.block2 != null) {\r\n                    this.block2.parent = this.node;\r\n                    let position = this.block2.position.clone();\r\n                    position.z = this.nextBlockZ;\r\n                    this.block2.setPosition(position);\r\n                }\r\n            }*/\r\n            if (this.player.position.z <= 4744 && this.player.position.z >= 285) {\r\n                if (this.index == 0) {\r\n                    let a1 = Number(this.block1!.name);\r\n                    this._barPools[a1].put(this.block1!);\r\n                    this.block1 = this._barPools[this.playerControl.phase].get();\r\n                    if (this.block1 != null) {\r\n                        this.block1.parent = this.node;\r\n                        let position = this.block1.position.clone();\r\n                        position.z = this.nextBlockZ;\r\n                        this.block1.setPosition(position);\r\n                    }\r\n                }\r\n                console.log(this.index);\r\n                \r\n                if (this.index == 1) {\r\n                    let a1 = Number(this.block2!.name);\r\n                    this._barPools[a1].put(this.block2!);\r\n                    this.block2 = this._barPools[this.playerControl.phase].get();\r\n                    if (this.block2 != null) {\r\n                        this.block2.parent = this.node;\r\n                        let position = this.block2.position.clone();\r\n                        position.z = this.nextBlockZ;\r\n                        this.block2.setPosition(position);\r\n                    }\r\n                }\r\n                if (this.index == 2) {\r\n                    let a1 = Number(this.block3!.name);\r\n                    this._barPools[a1].put(this.block3!);\r\n                    this.block3 = this._barPools[this.playerControl.phase].get();\r\n                    if (this.block3 != null) {\r\n                        this.block3.parent = this.node;\r\n                        let position = this.block3.position.clone();\r\n                        position.z = this.nextBlockZ;\r\n                        this.block3.setPosition(position);\r\n                    }\r\n                }\r\n                this.index = (this.index + 1) % 3;\r\n                this.nextBlockZ += 156;\r\n            }\r\n            else if (this.player.position.z > 4744) {\r\n                /*let a1 = Number(this.block4!.name);\r\n                this._barPools[a1].put(this.block4!);\r\n                this.block4 = this._barPools[3].get();*/\r\n                if (this.block4 != null) {\r\n                    this.block4.parent = this.node;\r\n                    let position = this.block4.position.clone();\r\n                    position.z = this.nextBlockZ;\r\n                    this.block4.setPosition(position);\r\n                }\r\n               // this.nextBlockZ += 156;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.0/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.0/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.0/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}
{"version":3,"sources":["file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/AudioManager.ts"],"names":["AudioManager","assert","assetManager","AudioClip","log","init","audioSource","_audioSource","playMusic","play","playSound","name","path","cachedAudioClip","_cachedAudioClipMap","playOneShot","resources","load","err","clip","console","warn"],"mappings":";;;uDAEaA,Y;;;;;;;;;AAFJC,MAAAA,M,OAAAA,M;AAAQC,MAAAA,Y,OAAAA,Y;AAAcC,MAAAA,S,OAAAA,S;AAAwBC,MAAAA,G,OAAAA,G;;;;;;;8BAE1CJ,Y,GAAN,MAAMA,YAAN,CAAmB;AAItB;AACkB,eAAJK,IAAI,CAAEC,WAAF,EAA4B;AAC1CF,UAAAA,GAAG,CAAC,qBAAD,CAAH;AACAJ,UAAAA,YAAY,CAACO,YAAb,GAA4BD,WAA5B;AACH;;AACsB,eAATE,SAAS,GAAI;AACvB,gBAAMF,WAAW,GAAGN,YAAY,CAACO,YAAjC;AACAN,UAAAA,MAAM,CAACK,WAAD,EAAc,0BAAd,CAAN;AACAA,UAAAA,WAAW,CAACG,IAAZ;AACH;;AAEsB,eAATC,SAAS,CAACC,IAAD,EAAe;AAClC,gBAAML,WAAW,GAAGN,YAAY,CAACO,YAAjC;AACAN,UAAAA,MAAM,CAACK,WAAD,EAAc,0BAAd,CAAN;AACA,gBAAMM,IAAI,GAAI,oBAAmBD,IAAK,EAAtC;AACA,cAAIE,eAAe,GAAGb,YAAY,CAACc,mBAAb,CAAiCF,IAAjC,CAAtB;;AACA,cAAIC,eAAJ,EAAqB;AACjBP,YAAAA,WAAW,CAACS,WAAZ,CAAwBF,eAAxB,EAAyC,CAAzC;AACH,WAFD,MAEO;AAAA;;AACH,qCAAAX,YAAY,CAACc,SAAb,gFAAwBC,IAAxB,CAA6BL,IAA7B,EAAmCT,SAAnC,EAA8C,CAACe,GAAD,EAAMC,IAAN,KAAe;AACzD,kBAAID,GAAJ,EAAS;AACLE,gBAAAA,OAAO,CAACC,IAAR,CAAaH,GAAb;AACA;AACH;;AACDlB,cAAAA,YAAY,CAACc,mBAAb,CAAiCF,IAAjC,IAAyCO,IAAzC;AACAb,cAAAA,WAAW,CAACS,WAAZ,CAAwBI,IAAxB,EAA8B,CAA9B;AACH,aAPD;AAQH;AACJ;;AAhCqB,O;;sBAAbnB,Y;;sBAAAA,Y,yBAEuD,E","sourcesContent":["import { assert, assetManager, AudioClip, AudioSource, log } from \"cc\";\r\n\r\nexport class AudioManager {\r\n    private static _audioSource?: AudioSource;\r\n    private static _cachedAudioClipMap: Record<string, AudioClip> = {};\r\n\r\n    // init AudioManager in GameRoot component.\r\n    public static init (audioSource: AudioSource) {\r\n        log('Init AudioManager !');\r\n        AudioManager._audioSource = audioSource;\r\n    }\r\n    public static playMusic () {\r\n        const audioSource = AudioManager._audioSource!;\r\n        assert(audioSource, 'AudioManager not inited!');        \r\n        audioSource.play();\r\n    }\r\n\r\n    public static playSound(name: string) {\r\n        const audioSource = AudioManager._audioSource!;\r\n        assert(audioSource, 'AudioManager not inited!');\r\n        const path = `audio/eulerFirst/${name}`;\r\n        let cachedAudioClip = AudioManager._cachedAudioClipMap[path];\r\n        if (cachedAudioClip) {\r\n            audioSource.playOneShot(cachedAudioClip, 1);\r\n        } else {\r\n            assetManager.resources?.load(path, AudioClip, (err, clip) => {\r\n                if (err) {\r\n                    console.warn(err);\r\n                    return;\r\n                }\r\n                AudioManager._cachedAudioClipMap[path] = clip;\r\n                audioSource.playOneShot(clip, 1);\r\n            });\r\n        }\r\n    }\r\n}"]}
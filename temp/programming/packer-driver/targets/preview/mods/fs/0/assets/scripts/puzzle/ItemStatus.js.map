{"version":3,"sources":["file:///C:/Users/86152/Desktop/laowang/EulerLand/assets/scripts/puzzle/ItemStatus.ts"],"names":["_decorator","Component","Node","CCInteger","UIManager","ccclass","property","ItemStatus","type","Boolean","TouchStart","isInBag","isStartTime","isLong","time","TouchEnd","console","log","node","name","onLoad","on","EventType","TOUCH_START","TOUCH_END","start","update","deltaTime"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAAiBC,MAAAA,S,OAAAA,S;;AAExCC,MAAAA,S,cAAAA,S;;;;;;;AACDC,MAAAA,O,GAAsBL,U,CAAtBK,O;AAASC,MAAAA,Q,GAAaN,U,CAAbM,Q;;4BAGJC,U,WADZF,OAAO,CAAC,YAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI;AAAA;AAAA;AADE,OAAD,C,UAIRF,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEC;AADA,OAAD,C,UAIRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEC;AADA,OAAD,C,UAIRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEC;AADA,OAAD,C,UAIRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEC;AADA,OAAD,C,UAIRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEC;AADA,OAAD,C,UAIRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEC;AADA,OAAD,C,UAIRH,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEL;AADA,OAAD,C,WAIRG,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAEL;AADA,OAAD,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;iEAKK,G;;wEACO,K;;mEACL,K;;;;;;;eAETO,U,GAAP,sBAAoB;AAChB,cAAI,KAAKC,OAAT,EAAkB;AACd,iBAAKC,WAAL,GAAmB,IAAnB;AACA,iBAAKC,MAAL,GAAc,KAAd;AACA,iBAAKC,IAAL,GAAY,GAAZ;AACH;AACJ,S;;eACMC,Q,GAAP,oBAAkB;AACd,cAAI,KAAKJ,OAAT,EAAkB;AACd,iBAAKC,WAAL,GAAmB,KAAnB;;AACA,gBAAI,CAAC,KAAKC,MAAV,EAAkB;AACd,mBAAKC,IAAL,GAAY,GAAZ;AACH;;AACDE,YAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,IAAL,CAAUC,IAAV,GAAe,OAAf,GAAyB,KAAKN,MAA1C;AACH;AACJ,S;;eAEDO,M,GAAA,kBAAS;AACL,eAAKF,IAAL,CAAUG,EAAV,CAAanB,IAAI,CAACoB,SAAL,CAAeC,WAA5B,EAAyC,KAAKb,UAA9C,EAA0D,IAA1D;AACA,eAAKQ,IAAL,CAAUG,EAAV,CAAanB,IAAI,CAACoB,SAAL,CAAeE,SAA5B,EAAuC,KAAKT,QAA5C,EAAsD,IAAtD;AACH,S;;eAEDU,K,GAAA,iBAAS,CACL;AACH,S;;eAEDC,M,GAAA,gBAAOC,SAAP,EAA0B;AACtB,cAAI,KAAKf,WAAT,EAAsB;AAClB,iBAAKE,IAAL,IAAaa,SAAb;;AACA,gBAAI,KAAKb,IAAL,IAAa,CAAjB,EAAoB;AAChB,mBAAKD,MAAL,GAAc,IAAd;AACH;AACJ;AACH,S;;;QA3E0BZ,S;;;;;iBAIE,I;;;;;;;iBAIb,K;;;;;;;iBAID,K;;;;;;;iBAIA,K;;;;;;;iBAIA,K;;;;;;;iBAIE,K;;;;;;;iBAIF,K;;;;;;;iBAIC,CAAC,C;;;;;;;iBAID,CAAC,C;;;AA0CtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, CCBoolean, CCInteger, math, labelAssembler, Label } from 'cc';\r\nimport { BagManager } from './BagManager';\r\nimport { UIManager } from './UIManager';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('ItemStatus')\r\nexport class ItemStatus extends Component {\r\n    @property({\r\n        type: UIManager\r\n    })\r\n    public uiManager: UIManager = null!;\r\n    @property({\r\n        type: Boolean\r\n    })\r\n    public isInBag = false;\r\n    @property({\r\n        type: Boolean\r\n    })\r\n    public synGet = false;\r\n    @property({\r\n        type: Boolean\r\n    })\r\n    public canUse = false;\r\n    @property({\r\n        type: Boolean\r\n    })\r\n    public canSyn = false;\r\n    @property({\r\n        type: Boolean\r\n    })\r\n    public isSelect = false;\r\n    @property({\r\n        type: Boolean\r\n    })\r\n    public isItem = false;\r\n    @property({\r\n        type: CCInteger\r\n    })\r\n    public synCode = -1;\r\n    @property({\r\n        type: CCInteger\r\n    })\r\n    public useCode = -1;\r\n\r\n    public time = 0.5;\r\n    public isStartTime = false;\r\n    public isLong = false;\r\n\r\n    public TouchStart() {\r\n        if (this.isInBag) {\r\n            this.isStartTime = true;\r\n            this.isLong = false;\r\n            this.time = 0.5;\r\n        }\r\n    }\r\n    public TouchEnd() {\r\n        if (this.isInBag) {\r\n            this.isStartTime = false;\r\n            if (!this.isLong) {\r\n                this.time = 0.5;\r\n            }\r\n            console.log(this.node.name+\"long:\" + this.isLong);\r\n        }\r\n    }\r\n\r\n    onLoad() {\r\n        this.node.on(Node.EventType.TOUCH_START, this.TouchStart, this);\r\n        this.node.on(Node.EventType.TOUCH_END, this.TouchEnd, this);\r\n    }\r\n\r\n    start () {\r\n        // [3]\r\n    }\r\n\r\n    update(deltaTime: number) {\r\n        if (this.isStartTime) {\r\n            this.time -= deltaTime;\r\n            if (this.time <= 0) {\r\n                this.isLong = true;\r\n            }\r\n        }\r\n     }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.0/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.0/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.0/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}
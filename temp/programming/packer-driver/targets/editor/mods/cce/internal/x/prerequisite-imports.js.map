{"version":3,"sources":["cce:/internal/x/prerequisite-imports"],"names":["requests","request","_err"],"mappings":";;;;;;AACA;AAEA,YAAM,CAAC,YAAY;AACf,cAAMA,QAAQ,GAAG,CAAC,sBAAa,sFAAb,CAAD,EAAuG,sBAAa,2FAAb,CAAvG,EAAkN,sBAAa,mFAAb,CAAlN,EAAqT,sBAAa,0FAAb,CAArT,EAA+Z,sBAAa,kFAAb,CAA/Z,EAAigB,sBAAa,iFAAb,CAAjgB,EAAkmB,sBAAa,qFAAb,CAAlmB,EAAusB,sBAAa,kFAAb,CAAvsB,EAAyyB,sBAAa,gFAAb,CAAzyB,EAAy4B,sBAAa,6EAAb,CAAz4B,EAAs+B,sBAAa,8EAAb,CAAt+B,EAAokC,sBAAa,0EAAb,CAApkC,EAA8pC,sBAAa,kFAAb,CAA9pC,EAAgwC,sBAAa,wEAAb,CAAhwC,EAAw1C,sBAAa,8EAAb,CAAx1C,EAAs7C,sBAAa,wEAAb,CAAt7C,EAA8gD,sBAAa,wEAAb,CAA9gD,EAAsmD,sBAAa,iFAAb,CAAtmD,EAAusD,sBAAa,wEAAb,CAAvsD,EAA+xD,sBAAa,gFAAb,CAA/xD,EAA+3D,sBAAa,wEAAb,CAA/3D,EAAu9D,sBAAa,gFAAb,CAAv9D,EAAujE,sBAAa,8EAAb,CAAvjE,EAAqpE,sBAAa,uFAAb,CAArpE,EAA4vE,sBAAa,wEAAb,CAA5vE,EAAo1E,sBAAa,0EAAb,CAAp1E,EAA86E,sBAAa,6EAAb,CAA96E,EAA2gF,sBAAa,kFAAb,CAA3gF,EAA6mF,sBAAa,mFAAb,CAA7mF,CAAjB;;AACA,aAAK,MAAMC,OAAX,IAAsBD,QAAtB,EAAgC;AAC5B,cAAI;AACA,kBAAMC,OAAO,EAAb;AACH,WAFD,CAEE,OAAOC,IAAP,EAAa,CACX;AACH;AACJ;AACJ,OATK,GAAN","sourcesContent":["\n// Auto generated represents the prerequisite imports of project modules.\n\nawait (async () => {\n    const requests = [() => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/Adaptor/BackgroundAdapter.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/Adaptor/CloseToBorderComponent.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/Adaptor/ContentAdapter.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/Adaptor/MultiResoultionCompat.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/global/GlobalFunction.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/AudioManager.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/BlockPoolControl.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/CameraControl.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/GameManager.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/GameRoot.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/Introduce.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/ItemS.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/PlayerControl.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/parkour/Q&A.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/BagManager.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/Box1.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/Box2.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/DialogManager.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/Drag.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/EventManager.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/Fade.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/GameManager2.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/ItemStatus.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/PlayerPuzzleControl.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/Q&A2.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/Sudoku.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/UIManager.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/puzzle/typescript-001.ts\"), () => import(\"file:///C:/Users/86152/Desktop/EulerLand/assets/scripts/start/StartSceneOption.ts\")];\n    for (const request of requests) {\n        try {\n            await request();\n        } catch (_err) {\n            // The error should have been caught by executor.\n        }\n    }\n})();\n    "]}
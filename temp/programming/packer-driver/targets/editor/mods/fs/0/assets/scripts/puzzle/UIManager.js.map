{"version":3,"sources":["file:///C:/eulerland%20game/EulerLand/assets/scripts/puzzle/UIManager.ts"],"names":["_decorator","Component","Node","Label","Fade","BagManager","ItemStatus","ccclass","property","UIManager","type","StartGame","gameUI","active","RestartGame","startUI","Close","event","btn","target","parent","ShowInfo","itemStatus","getComponent","isInBag","synGet","isItem","infoUI","name","children","string","isLong","CheckScene","custom","scenes","Number","start"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACSA,MAAAA,U,OAAAA,U;AAAYC,MAAAA,S,OAAAA,S;AAAWC,MAAAA,I,OAAAA,I;AAA+DC,MAAAA,K,OAAAA,K;;AACtFC,MAAAA,I,SAAAA,I;;AACAC,MAAAA,U,eAAAA,U;;AACAC,MAAAA,U,eAAAA,U;;;;;;;OACH;AAAEC,QAAAA,OAAF;AAAWC,QAAAA;AAAX,O,GAAwBR,U;;2BAGjBS,S,WADZF,OAAO,CAAC,WAAD,C,UAEHC,QAAQ,CAAC;AACNE,QAAAA,IAAI;AAAA;AAAA;AADE,OAAD,C,UAKRF,QAAQ,CAAC;AACNE,QAAAA,IAAI;AAAA;AAAA;AADE,OAAD,C,UAIRF,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAER;AADA,OAAD,C,UAIRM,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAER;AADA,OAAD,C,UAIRM,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAER;AADA,OAAD,C,UAIRM,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAER;AADA,OAAD,C,UAIRM,QAAQ,CAAC;AACNE,QAAAA,IAAI,EAAER;AADA,OAAD,C,oCA3Bb,MACaO,SADb,SAC+BR,SAD/B,CACyC;AAAA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AA+B9BU,QAAAA,SAAS,GAAG;AACf,eAAKC,MAAL,CAAYC,MAAZ,GAAqB,IAArB;AACH;;AACMC,QAAAA,WAAW,GAAG;AACjB,eAAKC,OAAL,CAAaF,MAAb,GAAsB,IAAtB;AACH;;AACMG,QAAAA,KAAK,CAACC,KAAD,EAAe;AACvB,cAAIC,GAAG,GAAGD,KAAK,CAAEE,MAAjB;AACAD,UAAAA,GAAG,CAACE,MAAJ,CAAYP,MAAZ,GAAqB,KAArB;AACH;;AACMQ,QAAAA,QAAQ,CAACJ,KAAD,EAAe;AAC1B,cAAIC,GAAG,GAAGD,KAAK,CAAEE,MAAjB;AACA,cAAIG,UAAU,GAAGJ,GAAG,CAACK,YAAJ;AAAA;AAAA,uCAAjB;;AACA,cAAI,EAACD,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEE,OAAb,KAAwB,EAACF,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEG,MAAb,CAAxB,KAA+CH,UAA/C,aAA+CA,UAA/C,uBAA+CA,UAAU,CAAEI,MAA3D,CAAJ,EAAuE;AACnE,iBAAKC,MAAL,CAAYd,MAAZ,GAAqB,IAArB;AACA,gBAAIe,IAAI,GAAG,KAAKD,MAAL,CAAYE,QAAZ,CAAqB,CAArB,EAAwBN,YAAxB,CAAqCpB,KAArC,CAAX;AACAyB,YAAAA,IAAI,CAAEE,MAAN,GAAeZ,GAAG,CAACU,IAAnB;AACH,WAJD,MAKK;AACD,gBAAIN,UAAU,CAAES,MAAhB,EAAwB;AACpB,mBAAKJ,MAAL,CAAYd,MAAZ,GAAqB,IAArB;AACA,kBAAIe,IAAI,GAAG,KAAKD,MAAL,CAAYE,QAAZ,CAAqB,CAArB,EAAwBN,YAAxB,CAAqCpB,KAArC,CAAX;AACAyB,cAAAA,IAAI,CAAEE,MAAN,GAAeZ,GAAG,CAACU,IAAnB;AACH;AACJ;AACJ;;AACMI,QAAAA,UAAU,CAACf,KAAD,EAAegB,MAAf,EAA+B;AAC5C,eAAKC,MAAL,CAAYC,MAAM,CAACF,MAAD,CAAlB,EAA4BpB,MAA5B,GAAqC,IAArC;AACH;;AACDuB,QAAAA,KAAK,GAAI,CACL;AACH,SA9DoC,CAgErC;AACA;AACA;;;AAlEqC,O;;;;;iBAIZ,I;;;;;;;iBAKZ,I;;;;;;;iBAIG,I;;;;;;;iBAID,I;;;;;;;iBAIA,I;;;;;;;iBAIA,I;;;;;;;iBAIE,E;;;AAwCrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["\r\nimport { _decorator, Component, Node, Canvas, view, macro, find, UITransform, director, Event, Label } from 'cc';\r\nimport { Fade } from './Fade'\r\nimport { BagManager } from './BagManager'\r\nimport { ItemStatus } from './ItemStatus';\r\nconst { ccclass, property } = _decorator;\r\n\r\n@ccclass('UIManager')\r\nexport class UIManager extends Component {\r\n    @property({\r\n        type: BagManager\r\n    })\r\n    bagManager: BagManager = null!;\r\n\r\n    @property({\r\n        type: Fade\r\n    })\r\n    fade: Fade = null!;\r\n    @property({\r\n        type: Node\r\n    })\r\n    startUI: Node = null!;\r\n    @property({\r\n        type: Node\r\n    })\r\n    gameUI: Node = null!;\r\n    @property({\r\n        type: Node\r\n    })\r\n    infoUI: Node = null!;\r\n    @property({\r\n        type: Node,\r\n    })\r\n    select: Node = null!;\r\n    @property({\r\n        type: Node,\r\n    })\r\n    scenes: Node[] = [];\r\n\r\n    public StartGame() {\r\n        this.gameUI.active = true;\r\n    }\r\n    public RestartGame() {\r\n        this.startUI.active = true;\r\n    }\r\n    public Close(event: Event) {\r\n        let btn = event!.target as Node;\r\n        btn.parent!.active = false;\r\n    }\r\n    public ShowInfo(event: Event) {\r\n        let btn = event!.target as Node;\r\n        let itemStatus = btn.getComponent(ItemStatus);\r\n        if (!itemStatus?.isInBag && !itemStatus?.synGet && itemStatus?.isItem) {\r\n            this.infoUI.active = true;\r\n            let name = this.infoUI.children[3].getComponent(Label);\r\n            name!.string = btn.name;\r\n        }\r\n        else {\r\n            if (itemStatus!.isLong) {\r\n                this.infoUI.active = true;\r\n                let name = this.infoUI.children[3].getComponent(Label);\r\n                name!.string = btn.name;\r\n            }\r\n        }\r\n    }\r\n    public CheckScene(event: Event, custom: string) {\r\n        this.scenes[Number(custom)].active = true;\r\n    }\r\n    start () {\r\n        // [3]\r\n    }\r\n\r\n    // update (deltaTime: number) {\r\n    //     // [4]\r\n    // }\r\n}\r\n\r\n/**\r\n * [1] Class member could be defined like this.\r\n * [2] Use `property` decorator if your want the member to be serializable.\r\n * [3] Your initialization goes here.\r\n * [4] Your update function goes here.\r\n *\r\n * Learn more about scripting: https://docs.cocos.com/creator/3.0/manual/en/scripting/\r\n * Learn more about CCClass: https://docs.cocos.com/creator/3.0/manual/en/scripting/ccclass.html\r\n * Learn more about life-cycle callbacks: https://docs.cocos.com/creator/3.0/manual/en/scripting/life-cycle-callbacks.html\r\n */\r\n"]}